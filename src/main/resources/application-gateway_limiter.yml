server:
  port: 8088
logging:
  level:
    org.springframework.cloud.gateway: trace
    org.springframework.http.server.reactive: debug
    org.springframework.web.reactive: debug
    reactor.ipc.netty: debug
eureka:
  client:
    service-url:
      defaultZone: http://localhost:1111/eureka/
feign:
  hystrix:
    enabled: true
spring:
  application:
    name: gateway-service
  redis:
    database: 1
    host: 192.168.1.154
    port: 6379
    password: jingxiaohuredis@123
  cloud:        # spring cloud gateway 路由配置方式
    gateway:
      discovery:   #是否与服务发现组件进行结合，通过 serviceId(必须设置成大写) 转发到具体的服务实例。默认为false，设为true便开启通过服务中心的自动根据 serviceId 创建路由的功能。
        locator:    #路由访问方式：http://Gateway_HOST:Gateway_PORT/大写的serviceId/**，其中微服务应用名默认大写访问。
          enabled: false
          lowerCaseServiceId: true #是将请求路径上的服务名配置为小写（因为服务注册的时候，向注册中心注册时将服务名转成大写的了）
      routes:
      - id: limit_route
        uri: lb://EXAMPLE
        order: 0
        predicates:
        - Path=/demo/**
        filters:
        #熔断过滤器
        - name: Hystrix
          args:
            name: fallbackcmd
            fallbackUri: forward:/defaultfallback
        - StripPrefix=1
        #限流过滤器
        - name: RequestRateLimiter
          args:
           key-resolver: '#{@hostAddrKeyResolver}'
            # 每秒最大访问次数（放令牌桶的速率）
           redis-rate-limiter.replenishRate: 1
            # 令牌桶最大容量（令牌桶的大小）
           redis-rate-limiter.burstCapacity: 3

#熔断器配置
hystrix:
  command:
    default:
      execution:
        isolation:
          strategy: SEMAPHORE
          thread:
            timeoutInMilliseconds: 3000
  shareSecurityContext: true